IN 10H  

;WE WILL CHECK EVERY LINE TO SEE WHAT HAS BEEN PRESSED 
;AND IF IT HAS BEEN PRESSED WE'LL PRINT IT 
  
LINE1: 

MVI A,7FH ;01111111 -> WE ARE CHOOSING LINE 1 
STA 2800H ; STORE IT AT 2800H THAT CHOOSES THE LINE 
LDA 1800H ;LOADING MEMORY FROM 1800H
ANI 07H ; "AND WITH" 00000111 BECAUSE WE WANT TO ISOLATE THE 3 LAST DIGITS 
RAR 
JNC D ; IF 1ST BIT=0 WE HAVE PRESSED D
RAR 
JNC E ; SAME FOR E 
RAR 
JNC F ; SAME FOR F 

LINE2: 

MVI A,BFH ;10111111 -> CHOOSING LINE 2
STA 2800H ;STORE IT AT 2800H THAT CHOOSES THE LINE 
LDA 1800H ;LOADING MEMORY FROM 1800H
ANI 07H ; "AND WITH" 00000111 BECAUSE WE WANT TO ISOLATE THE 3 LAST DIGITS 
RAR 
JNC A ; IF 1ST BIT=0 WE HAVE PRESSED A
RAR
JNC B ; SAME FOR B 
RAR 
JNC C ; SAME FOR C

;SAME PROCEDURE FOR THE NEXT LINES TOO

LINE3: 

MVI A,DFH 
STA 2800H  
LDA 1800H 
ANI 07H  
RAR  
JNC N7 
RAR 
JNC N8 
RAR 
JNC N9  
 
 
LINE4:
 
MVI A,EFH 
STA 2800H 
LDA 1800H 
ANI 07H  
RAR 
JNC N4 
RAR 
JNC N5 
RAR 
JNC N6  
  
LINE5: 

MVI A,F7H 
STA 2800H 
LDA 1800H 
ANI 07H  
RAR 
JNC N1 
RAR 
JNC N2 
RAR 
JNC N3

LINE6: 

MVI A,FBH 
STA 2800H  
LDA 1800H 
ANI 07H  
RAR 
JNC N0
RAR 
JNC STORE_INCR
RAR 
JNC DECR
 
 
LINE7: 

MVI A,FDH
STA 2800H
LDA 1800H 
ANI 07H  
RAR 
JNC RUNB 
RAR 
JNC FETCH_REG 
RAR 
JNC FETCH_ADDRESS
 
LINE8:  

MVI A,FEH
STA 2800H
LDA 1800H 
ANI 07H  
RAR 
JNC INSTR_STEP 
RAR 
JNC FETCH_PC 
RAR 
JNC HDWR_STEP

NONE_PRESSED:
MVI D,10H ;DELETING 7 SEGMENT 
MVI E,10H  
JMP PRINT 

D: 
MVI D,0DH 
MVI E,00H 
JMP PRINT 
 
 
E: 
MVI D,0EH 
MVI E,00H 
JMP PRINT 
 
 
F: 
MVI D,0FH 
MVI E,00H 
JMP PRINT 
 
 
A: 
MVI D,0AH 
MVI E,00H 
JMP PRINT 
 
 
B: 
MVI D,0BH 
MVI E,00H 
JMP PRINT 
 
 
C:
MVI D,0CH 
MVI E,00H 
JMP PRINT 
 
 
N7: 
MVI D,07H 
MVI E,00H 
JMP PRINT 
 
 
N8: 
MVI D,08H 
MVI E,00H 
JMP PRINT 
  
N9: 
MVI D,09H 
MVI E,00H 
JMP PRINT 
 
N4: 
MVI D,04H 
MVI E,00H 
JMP PRINT 
 
 
N5: 
MVI D,05H 
MVI E,00H 
JMP PRINT 
  
N6: 
MVI D,06H 
MVI E,00H 
JMP PRINT 
 
N1: 
MVI D,01H 
MVI E,00H
JMP PRINT 
 
N2: 
MVI D,02H 
MVI E,00H 
JMP PRINT 
 
N3: 
MVI D,03H 
MVI E,00H 
JMP PRINT 
 
N0: 
MVI D,00H 
MVI E,00H 
JMP PRINT 
 
STORE_INCR:  
MVI D,03H 
MVI E,08H 
JMP PRINT 
  
DECR:  
MVI D,01H 
MVI E,08H 
JMP PRINT  
 
RUNB: 
MVI D,04H 
MVI E,08H 
JMP PRINT 
 
FETCH_REG: 
MVI D,00H 
MVI E,08H 
JMP PRINT 
 
 
FETCH_ADDRESS:  
MVI D,02H 
MVI E,08H 
JMP PRINT 
 
 
INSTR_STEP:  
MVI D,06H 
MVI E,08H 
JMP PRINT 
 
 
FETCH_PC:  
MVI D,05H 
MVI E,08H 
JMP PRINT 
 
 
HDWR_STEP:  
JMP LINE1

PRINT: 
LXI H,0A00H ; MEMORY POSITION FOR PRINTING
MVI B,10H ; DELETING 4 LSB OF 7 SEGMENT DISPLAY
MOV M,B  
INX H 
MOV M,B 
INX H 
MOV M,B 
INX H 
MOV M,B 
INX H ; POSITION FOR 2ND MSB OF OUR BUTTON 
MOV M,D ; THAT IS STORED IN REGISTER D 
INX H ; POSITION FOR THE MSB OF OUR BUTTON
MOV M,E ; THAT IS STORED IN REGISTER E
LXI D,0A00H  
CALL STDM 
CALL DCD 
JMP LINE1 
END